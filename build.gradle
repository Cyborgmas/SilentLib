buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'java'
    id 'net.ltgt.apt' version '0.10' // for lombok
    id 'java-library'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.4"
}

apply plugin: 'net.minecraftforge.gradle'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'

def modVersion = '3.1.0'
version = modVersion
group = 'net.silentchaos512.lib' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'silent-lib'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20180921-1.13'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    //accessTransformer = file('my_at.cfg')

    // default run configurations.
    // these can be tweaked, removed, or duplicated as needed.
    runs {
        client = {
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
        server = {
            workingDirectory project.file('run').canonicalPath
        }
    }
}

repositories {
    jcenter()
}

dependencies {
    minecraft 'net.minecraftforge.test:forge:1.13-24.0.145-1.13-pre'

    compile "org.projectlombok:lombok:1.18.0"
    apt "org.projectlombok:lombok:1.18.0"

    testCompile 'junit:junit:4.12'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', '1.13'

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'META_INF/mods.toml'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion': '1.13' // TODO: This doesn't work
    }

    // copy everything else except the mods.toml
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META_INF/mods.toml'
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        myPublication(MavenPublication) {
            groupId 'net.silentchaos512'
            artifactId 'silent-lib'
            version modVersion

            from components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    pkg {
        repo = 'maven'
        name = 'silent-lib'
        licenses = ["LGPL-3.0"]
        vcsUrl = 'https://github.com/SilentChaos512/SilentLib.git'

        version {
            name = modVersion
            desc = 'Silent Lib ${modVersion}'
            released = new Date()
            vcsTag = modVersion
//            attributes = []
        }
    }
}
