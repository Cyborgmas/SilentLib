buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

//plugins {
//    id "net.minecraftforge.gradle.forge" version "2.0.2"
//}

version = "2.3.4"
def buildNum = 0
group= "com.github.SilentChaos512" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "SilentLib-1.12.2"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.3.2669"
    runDir = "eclipse"

    def versionFile = file('version.properties')
    if (versionFile.canRead()) {
        def Properties versionProps = new Properties()
        
        versionProps.load(new FileInputStream(versionFile))
        
        buildNum = versionProps['BUILD_NUM'].toInteger() + 1
        
        versionProps['BUILD_NUM'] = buildNum.toString()
        versionProps.store(versionFile.newWriter(), null)
    }
    
    replace "SL_VERSION", project.version
    replace "BUILD_NUM = 0", "BUILD_NUM = " + buildNum
    replaceIn "SilentLib.java"

    mappings = "snapshot_20171003"
}

jar {
//    classifier = buildNum
}

//task sourcesJar(type: Jar, dependsOn: classes) {
//    classifier = buildNum + '-sources'
//    classifier = 'sources'
//    from sourceSets.main.allSource
//}

task deobfJar(type: Jar) {
    from(sourceSets.main.output) {
//        classifier = buildNum + "-deobf"
        classifier = 'deobf'
    }
}

artifacts {
//    archives sourcesJar
    archives deobfJar
}

sourceSets {
  main {
    java { srcDirs = ["$projectDir/common"] }
    resources { srcDirs = ["$projectDir/resources"] }
  }
}

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    provided "org.projectlombok:lombok:1.16.8"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
